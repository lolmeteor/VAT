# PowerShell —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è CORS –∏ –¥–æ–º–µ–Ω–æ–≤
Write-Host "=== –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ CORS –∏ –¥–æ–º–µ–Ω–æ–≤ ===" -ForegroundColor Green

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
Set-Location "/opt/vat"

Write-Host "`n1. –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Frontend..." -ForegroundColor Yellow

# –°–æ–∑–¥–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π .env.local
@"
NEXT_PUBLIC_API_BASE_URL=https://www.vertexassistant.ru/api
NEXT_PUBLIC_TELEGRAM_BOT_NAME=VertexAIassistantBOT
"@ | Out-File -FilePath ".env.local" -Encoding UTF8

Write-Host "‚úÖ .env.local –æ–±–Ω–æ–≤–ª–µ–Ω" -ForegroundColor Green

# –û–±–Ω–æ–≤–ª—è–µ–º Python –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
Write-Host "`n2. –û–±–Ω–æ–≤–ª—è–µ–º Python –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é..." -ForegroundColor Yellow

# –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π .env —Ñ–∞–π–ª –¥–ª—è Python
@"
# –ü—Ä–æ–¥–∞–∫—à–Ω –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
APP_ENV=production
APP_SECRET_KEY=aG3yL4zO2ryD2yQ8_VAT_SECRET_2025
APP_BASE_URL=https://www.vertexassistant.ru
CORS_ALLOWED_ORIGINS=https://www.vertexassistant.ru,https://www.vertexassistant.ru:443,https://vertexassistant.ru

# –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
DB_HOST=server268.hosting.reg.ru
DB_PORT=3306
DB_NAME=u3151465_VAT2
DB_USER=u3151465_Aleksey
DB_PASSWORD=your_password_here

# Telegram
TELEGRAM_BOT_TOKEN=7693655467:AAHMKYv6F8U5TVz-CPgNoOV-d52NgAETmp0
TELEGRAM_LOGIN_WIDGET_BOT_NAME=VertexAIassistantBOT

# S3 Reg.ru
S3_ENDPOINT_URL=https://s3.regru.cloud
S3_ACCESS_KEY_ID=8TVU2GJ3DLFZVS5MUI3L
S3_SECRET_ACCESS_KEY=1ARu78H9fvqqDmDpDLJFVkVt0U5RQ1v8qlNdhpgb
S3_BUCKET_NAME=smartmashabot
S3_REGION=ru-central1

# Make.com
MAKE_TRANSCRIPTION_WEBHOOK_URL=https://hook.eu2.make.com/osl3us5x5bk8uqytihx73d8o24ebw57q
"@ | Out-File -FilePath ".env" -Encoding UTF8

Write-Host "‚úÖ .env –æ–±–Ω–æ–≤–ª–µ–Ω" -ForegroundColor Green

# –ü–µ—Ä–µ—Å–æ–±–∏—Ä–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
Write-Host "`n3. –ü–µ—Ä–µ—Å–æ–±–∏—Ä–∞–µ–º Next.js –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ..." -ForegroundColor Yellow
try {
    & npm run build
    Write-Host "‚úÖ Next.js –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–µ—Ä–µ—Å–æ–±—Ä–∞–Ω–æ" -ForegroundColor Green
}
catch {
    Write-Host "‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ Next.js: $($_.Exception.Message)" -ForegroundColor Red
}

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã
Write-Host "`n4. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã..." -ForegroundColor Yellow
$services = @("vat-frontend", "vat-fastapi", "nginx")

foreach ($service in $services) {
    try {
        systemctl restart $service
        Start-Sleep -Seconds 2
        $status = systemctl is-active $service
        if ($status -eq "active") {
            Write-Host "‚úÖ $service –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ" -ForegroundColor Green
        } else {
            Write-Host "‚ùå $service –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è" -ForegroundColor Red
        }
    }
    catch {
        Write-Host "‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ $service" -ForegroundColor Red
    }
}

Write-Host "`n5. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç..." -ForegroundColor Yellow
Start-Sleep -Seconds 5

try {
    $response = Invoke-WebRequest -Uri "https://www.vertexassistant.ru/api/health" -UseBasicParsing
    Write-Host "‚úÖ API –¥–æ—Å—Ç—É–ø–µ–Ω - Status: $($response.StatusCode)" -ForegroundColor Green
}
catch {
    Write-Host "‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: $($_.Exception.Message)" -ForegroundColor Red
}

Write-Host "`n=== –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ ===" -ForegroundColor Green
Write-Host "üåê –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–∞–π—Ç: https://www.vertexassistant.ru" -ForegroundColor Cyan

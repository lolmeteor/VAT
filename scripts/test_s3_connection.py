"""
–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ S3 Reg.ru —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –±–∞–∫–µ—Ç–æ–º vatbucket
"""
import boto3
import os
import urllib3
from botocore.exceptions import ClientError
from botocore.config import Config
from dotenv import load_dotenv

# –û—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è SSL
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

def test_s3_connection():
    print("üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ S3 Reg.ru —Å –±–∞–∫–µ—Ç–æ–º vatbucket...")
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ S3 - –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–ø–æ—Å–æ–± –¥–ª—è Reg.ru
    s3_client = boto3.client(
        's3',
        endpoint_url='https://s3.regru.cloud',
        aws_access_key_id='8TVU2GJ3DLFZVS5MUI3L',
        aws_secret_access_key='1ARu78H9fvqqDmDpDLJFVkVt0U5RQ1v8qlNdhpgb',
        region_name='ru-central1',
        verify=False  # –û—Ç–∫–ª—é—á–∞–µ–º SSL –ø—Ä–æ–≤–µ—Ä–∫—É
    )
    
    bucket_name = "vatbucket"  # –ü–†–ê–í–ò–õ–¨–ù–û–ï –ù–ê–ó–í–ê–ù–ò–ï –ë–ê–ö–ï–¢–ê
    print(f"üì¶ –ë–∞–∫–µ—Ç: {bucket_name}")
    print(f"üåê Endpoint: https://s3.regru.cloud")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –∫ –±–∞–∫–µ—Ç—É
        print(f"\n1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –∫ –±–∞–∫–µ—Ç—É vatbucket...")
        response = s3_client.list_objects_v2(Bucket=bucket_name, MaxKeys=5)
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ S3 —É—Å–ø–µ—à–Ω–æ!")
        
        if 'Contents' in response:
            print(f"üìÅ –ù–∞–π–¥–µ–Ω–æ —Ñ–∞–π–ª–æ–≤ –≤ –±–∞–∫–µ—Ç–µ: {len(response['Contents'])}")
            for obj in response['Contents'][:3]:
                print(f"   - {obj['Key']} ({obj['Size']} bytes)")
        else:
            print("üìÅ –ë–∞–∫–µ—Ç –ø—É—Å—Ç–æ–π")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É —Ñ–∞–π–ª–∞
        test_content = b"Test upload from Python - VAT Project - vatbucket"
        test_key = "test/python-connection-test.txt"
        
        print(f"\n2. –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª: {test_key}")
        s3_client.put_object(
            Bucket=bucket_name,
            Key=test_key,
            Body=test_content,
            ContentType='text/plain'
        )
        print("‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω!")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ñ–∞–π–ª –∑–∞–≥—Ä—É–∑–∏–ª—Å—è
        print(f"\n3. –°–∫–∞—á–∏–≤–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª...")
        response = s3_client.get_object(Bucket=bucket_name, Key=test_key)
        downloaded_content = response['Body'].read()
        print(f"‚úÖ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞: {downloaded_content.decode()}")
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø—É–±–ª–∏—á–Ω—É—é —Å—Å—ã–ª–∫—É
        file_url = f"https://s3.regru.cloud/{bucket_name}/{test_key}"
        print(f"üîó –ü—É–±–ª–∏—á–Ω–∞—è —Å—Å—ã–ª–∫–∞: {file_url}")
        
        # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
        print(f"\n4. –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª...")
        s3_client.delete_object(Bucket=bucket_name, Key=test_key)
        print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª —É–¥–∞–ª–µ–Ω!")
        
        print(f"\nüéâ S3 –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∫–µ—Ç—É vatbucket —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
        return True
        
    except ClientError as e:
        error_code = e.response['Error']['Code']
        error_message = e.response['Error']['Message']
        print(f"‚ùå –û—à–∏–±–∫–∞ S3 ({error_code}): {error_message}")
        
        if error_code == 'NoSuchBucket':
            print("üí° –ë–∞–∫–µ—Ç –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –±–∞–∫–µ—Ç–∞.")
        elif error_code == 'AccessDenied':
            print("üí° –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–ª—é—á–∏ –¥–æ—Å—Ç—É–ø–∞.")
        elif error_code == 'InvalidAccessKeyId':
            print("üí° –ù–µ–≤–µ—Ä–Ω—ã–π Access Key ID.")
        elif error_code == 'SignatureDoesNotMatch':
            print("üí° –ù–µ–≤–µ—Ä–Ω—ã–π Secret Access Key.")
            
        return False
        
    except Exception as e:
        print(f"‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False

if __name__ == "__main__":
    success = test_s3_connection()
    exit(0 if success else 1)
